=begin
#API from Wineshipping

#Wineshipping API is a programmatically consumable service or an Application Programming Interface (API) platform designed to enable Wineshipping LLC's client applications to natively transmit and manage their order, view inventory, track shipments etc.<br /><br />In order to access API operations request a user key and password from Wineshipping. For any questions please contact Wineshipping Helpdesk at <a href='mailto:IT-Help@wineshipping.com?Subject=API from Wineshipping'>IT-Help@wineshipping.com</a>.

OpenAPI spec version: V3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.13

=end

require 'uri'

module WineShipping
  class InventoryApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # This operation provides inventory information with warehouse, status, quantity on hand, quantity reserved on orders, quantity on backorder, quantity available, and quantity on an inbound PO. This operation optionally accepts a warehouse code to return related inventory records for a specific Wineshipping warehouse, if omitted the operation will return inventory records for all warehouses. The operation also accepts an array of items to query inventory records, if omitted returns inventory records for all items in the warehouse specified.
    # @param invent_status_request
    # @param [Hash] opts the optional parameters
    # @return [InventoryStatusResult]
    def get_inventory_status(invent_status_request, opts = {})
      data, status_code, headers = get_inventory_status_with_http_info(invent_status_request, opts)
      { body: data, code: status_code, headers: headers }
    end

    # This operation provides inventory information with warehouse, status, quantity on hand, quantity reserved on orders, quantity on backorder, quantity available, and quantity on an inbound PO. This operation optionally accepts a warehouse code to return related inventory records for a specific Wineshipping warehouse, if omitted the operation will return inventory records for all warehouses. The operation also accepts an array of items to query inventory records, if omitted returns inventory records for all items in the warehouse specified.
    # @param invent_status_request
    # @param [Hash] opts the optional parameters
    # @return [Array<(InventoryStatusResult, Fixnum, Hash)>] InventoryStatusResult data, response status code and response headers
    def get_inventory_status_with_http_info(invent_status_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_inventory_status ...'
      end
      # verify the required parameter 'invent_status_request' is set
      if @api_client.config.client_side_validation && invent_status_request.nil?
        fail ArgumentError, "Missing the required parameter 'invent_status_request' when calling InventoryApi.get_inventory_status"
      end
      # resource path
      local_var_path = '/api/Inventory/GetStatus'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(invent_status_request)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InventoryStatusResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_inventory_status\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
