=begin
#Wineshipping API Suite

#Wineshipping API is a programmatically consumable service or an Application Programming Interface (API) suite designed to enable Wineshipping LLC's client applications to natively transmit and manage their order, view inventory, create product, validate address, track shipments etc.<br /><br />In order to access API operations request a user key and password from Wineshipping. For any questions please contact Wineshipping Helpdesk at <a href='mailto:api@wineshipping.com?Subject=API from Wineshipping'>api@wineshipping.com</a>.

OpenAPI spec version: V3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.44
=end

module WineShipping
  class InventoryApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # This operation provides inventory information with warehouse, status, quantity on hand, quantity reserved on orders, quantity on backorder, quantity available, and quantity on an inbound PO. This operation optionally accepts a warehouse code to return related inventory records for a specific Wineshipping warehouse, if omitted the operation will return inventory records for all warehouses. The operation also accepts an array of items to query inventory records, if omitted returns inventory records for all items in the warehouse specified.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [InventoryStatusResult]
    def get_inventory_status(body, opts = {})
      data, _status_code, _headers = get_inventory_status_with_http_info(body, opts)
      data
    end

    # This operation provides inventory information with warehouse, status, quantity on hand, quantity reserved on orders, quantity on backorder, quantity available, and quantity on an inbound PO. This operation optionally accepts a warehouse code to return related inventory records for a specific Wineshipping warehouse, if omitted the operation will return inventory records for all warehouses. The operation also accepts an array of items to query inventory records, if omitted returns inventory records for all items in the warehouse specified.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InventoryStatusResult, Integer, Hash)>] InventoryStatusResult data, response status code and response headers
    def get_inventory_status_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_inventory_status ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling InventoryApi.get_inventory_status"
      end
      # resource path
      local_var_path = '/api/Inventory/GetStatus'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'InventoryStatusResult' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_inventory_status\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This operation provides inventory information with warehouse, status, quantity on hand, quantity reserved on orders, quantity on backorder, quantity available, and quantity on an inbound PO. This operation optionally accepts a warehouse code to return related inventory records for a specific Wineshipping warehouse, if omitted the operation will return inventory records for all warehouses. The operation also accepts an array of items to query inventory records, if omitted returns inventory records for all items in the warehouse specified.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [InventoryStatusResult]
    def get_inventory_status_internal(body, opts = {})
      data, _status_code, _headers = get_inventory_status_internal_with_http_info(body, opts)
      data
    end

    # This operation provides inventory information with warehouse, status, quantity on hand, quantity reserved on orders, quantity on backorder, quantity available, and quantity on an inbound PO. This operation optionally accepts a warehouse code to return related inventory records for a specific Wineshipping warehouse, if omitted the operation will return inventory records for all warehouses. The operation also accepts an array of items to query inventory records, if omitted returns inventory records for all items in the warehouse specified.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InventoryStatusResult, Integer, Hash)>] InventoryStatusResult data, response status code and response headers
    def get_inventory_status_internal_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_inventory_status_internal ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling InventoryApi.get_inventory_status_internal"
      end
      # resource path
      local_var_path = '/api/Inventory/GetStatusInternal'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'InventoryStatusResult' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_inventory_status_internal\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This method allows a customer to retrieve inventory transactions. Inventory transactions include Sales Orders, Purchase Orders, Transfer In, Transfer Out, Production Lines, Inventory Adjustments and Inventory Status Changes. There are multiple input filters available for use, including filters to retrieve specific types of inventory transactions, to retrieve transactions processed on a particular date, or to retrieve transactions in a specific Wineshipping warehouse.  There are also pagination and skip/top query parameters that allow customers to further control the inventory transactions that are returned in the response.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [InventoryTransactionResult]
    def get_inventory_transactions(body, opts = {})
      data, _status_code, _headers = get_inventory_transactions_with_http_info(body, opts)
      data
    end

    # This method allows a customer to retrieve inventory transactions. Inventory transactions include Sales Orders, Purchase Orders, Transfer In, Transfer Out, Production Lines, Inventory Adjustments and Inventory Status Changes. There are multiple input filters available for use, including filters to retrieve specific types of inventory transactions, to retrieve transactions processed on a particular date, or to retrieve transactions in a specific Wineshipping warehouse.  There are also pagination and skip/top query parameters that allow customers to further control the inventory transactions that are returned in the response.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InventoryTransactionResult, Integer, Hash)>] InventoryTransactionResult data, response status code and response headers
    def get_inventory_transactions_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_inventory_transactions ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling InventoryApi.get_inventory_transactions"
      end
      # resource path
      local_var_path = '/api/Inventory/GetTransactions'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'InventoryTransactionResult' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_inventory_transactions\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This operation provides the total, aggregated inventory available to sell. This operation optionally accepts a list of warehouse codes to return sellable inventory totals for a specific subset of Wineshipping warehouses, otherwise all physical locations with sellable inventory are considered.<br /><br />This method is specifically designed to efficiently sync available inventory quantities with ecommerce, pos or other order management systems for all skus. See the <i>GetInventoryStatus</i> for retrieving more detailed inventory information for an individual sku.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [SellableInventoryResult]
    def get_sellable(body, opts = {})
      data, _status_code, _headers = get_sellable_with_http_info(body, opts)
      data
    end

    # This operation provides the total, aggregated inventory available to sell. This operation optionally accepts a list of warehouse codes to return sellable inventory totals for a specific subset of Wineshipping warehouses, otherwise all physical locations with sellable inventory are considered.&lt;br /&gt;&lt;br /&gt;This method is specifically designed to efficiently sync available inventory quantities with ecommerce, pos or other order management systems for all skus. See the &lt;i&gt;GetInventoryStatus&lt;/i&gt; for retrieving more detailed inventory information for an individual sku.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(SellableInventoryResult, Integer, Hash)>] SellableInventoryResult data, response status code and response headers
    def get_sellable_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_sellable ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling InventoryApi.get_sellable"
      end
      # resource path
      local_var_path = '/api/Inventory/GetSellable'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'SellableInventoryResult' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_sellable\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This operation provides the total, aggregated inventory available to sell. This operation optionally accepts a list of warehouse codes to return sellable inventory totals for a specific subset of Wineshipping warehouses, otherwise all physical locations with sellable inventory are considered.<br /><br />This method is specifically designed to efficiently sync available inventory quantities with ecommerce, pos or other order management systems for all skus. See the <i>GetInventoryStatus</i> for retrieving more detailed inventory information for an individual sku.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [SellableInventoryResult]
    def get_sellable_internal(body, opts = {})
      data, _status_code, _headers = get_sellable_internal_with_http_info(body, opts)
      data
    end

    # This operation provides the total, aggregated inventory available to sell. This operation optionally accepts a list of warehouse codes to return sellable inventory totals for a specific subset of Wineshipping warehouses, otherwise all physical locations with sellable inventory are considered.&lt;br /&gt;&lt;br /&gt;This method is specifically designed to efficiently sync available inventory quantities with ecommerce, pos or other order management systems for all skus. See the &lt;i&gt;GetInventoryStatus&lt;/i&gt; for retrieving more detailed inventory information for an individual sku.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(SellableInventoryResult, Integer, Hash)>] SellableInventoryResult data, response status code and response headers
    def get_sellable_internal_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_sellable_internal ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling InventoryApi.get_sellable_internal"
      end
      # resource path
      local_var_path = '/api/Inventory/GetSellableInternal'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'SellableInventoryResult' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_sellable_internal\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # @param transaction_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :invent_tran_req_authentication_user_key 
    # @option opts [String] :invent_tran_req_authentication_password 
    # @option opts [String] :invent_tran_req_authentication_customer_no 
    # @option opts [String] :invent_tran_req_transaction_date 
    # @option opts [String] :invent_tran_req_transaction_start_date_time 
    # @option opts [String] :invent_tran_req_transaction_end_date_time 
    # @option opts [String] :invent_tran_req_transaction_type 
    # @option opts [Array<String>] :invent_tran_req_transaction_types 
    # @option opts [String] :invent_tran_req_warehouse 
    # @option opts [Array<String>] :invent_tran_req_warehouses 
    # @option opts [String] :invent_tran_req_reference 
    # @option opts [Array<String>] :invent_tran_req_references 
    # @option opts [String] :invent_tran_req_inventory_status 
    # @option opts [Array<String>] :invent_tran_req_inventory_statuses 
    # @option opts [Array<String>] :invent_tran_req_item_numbers 
    # @option opts [Integer] :invent_tran_req_skip 
    # @option opts [Integer] :invent_tran_req_top 
    # @option opts [String] :obj_customer_customer_account_numberk__backing_field 
    # @option opts [String] :obj_customer_customer_namek__backing_field 
    # @option opts [String] :obj_customer_invoice_account_numberk__backing_field 
    # @option opts [String] :obj_customer_vendor_account_numberk__backing_field 
    # @option opts [String] :obj_customer_primary_contact_phonek__backing_field 
    # @option opts [String] :obj_customer_company_chaink__backing_field 
    # @option opts [String] :obj_customer_product_sharing_policyk__backing_field 
    # @option opts [BOOLEAN] :obj_customer_is_parentk__backing_field 
    # @option opts [String] :obj_customer_shipping_site_codek__backing_field 
    # @option opts [String] :obj_customer_shipping_warehouse_codek__backing_field 
    # @option opts [String] :obj_customer_legacy_customer_nok__backing_field 
    # @option opts [String] :obj_customer_primary_emailk__backing_field 
    # @option opts [Integer] :obj_customer_preferred_ship_day_profile_idk__backing_field 
    # @option opts [Integer] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_idk__backing_field 
    # @option opts [String] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_titlek__backing_field 
    # @option opts [BOOLEAN] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_mondayk__backing_field 
    # @option opts [BOOLEAN] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_tuesdayk__backing_field 
    # @option opts [BOOLEAN] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_wednesdayk__backing_field 
    # @option opts [BOOLEAN] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_thursdayk__backing_field 
    # @option opts [BOOLEAN] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_fridayk__backing_field 
    # @option opts [BOOLEAN] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_saturdayk__backing_field 
    # @option opts [BOOLEAN] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_sundayk__backing_field 
    # @option opts [String] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_notesk__backing_field 
    # @option opts [String] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_created_byk__backing_field 
    # @option opts [DateTime] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_created_onk__backing_field 
    # @option opts [String] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_modified_byk__backing_field 
    # @option opts [DateTime] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_modified_onk__backing_field 
    # @option opts [String] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_messagek__backing_field 
    # @option opts [String] :obj_customer_messagek__backing_field 
    # @return [InventoryTransactionResult]
    def inventory_get_transactions(transaction_id, opts = {})
      data, _status_code, _headers = inventory_get_transactions_with_http_info(transaction_id, opts)
      data
    end

    # @param transaction_id 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :invent_tran_req_authentication_user_key 
    # @option opts [String] :invent_tran_req_authentication_password 
    # @option opts [String] :invent_tran_req_authentication_customer_no 
    # @option opts [String] :invent_tran_req_transaction_date 
    # @option opts [String] :invent_tran_req_transaction_start_date_time 
    # @option opts [String] :invent_tran_req_transaction_end_date_time 
    # @option opts [String] :invent_tran_req_transaction_type 
    # @option opts [Array<String>] :invent_tran_req_transaction_types 
    # @option opts [String] :invent_tran_req_warehouse 
    # @option opts [Array<String>] :invent_tran_req_warehouses 
    # @option opts [String] :invent_tran_req_reference 
    # @option opts [Array<String>] :invent_tran_req_references 
    # @option opts [String] :invent_tran_req_inventory_status 
    # @option opts [Array<String>] :invent_tran_req_inventory_statuses 
    # @option opts [Array<String>] :invent_tran_req_item_numbers 
    # @option opts [Integer] :invent_tran_req_skip 
    # @option opts [Integer] :invent_tran_req_top 
    # @option opts [String] :obj_customer_customer_account_numberk__backing_field 
    # @option opts [String] :obj_customer_customer_namek__backing_field 
    # @option opts [String] :obj_customer_invoice_account_numberk__backing_field 
    # @option opts [String] :obj_customer_vendor_account_numberk__backing_field 
    # @option opts [String] :obj_customer_primary_contact_phonek__backing_field 
    # @option opts [String] :obj_customer_company_chaink__backing_field 
    # @option opts [String] :obj_customer_product_sharing_policyk__backing_field 
    # @option opts [BOOLEAN] :obj_customer_is_parentk__backing_field 
    # @option opts [String] :obj_customer_shipping_site_codek__backing_field 
    # @option opts [String] :obj_customer_shipping_warehouse_codek__backing_field 
    # @option opts [String] :obj_customer_legacy_customer_nok__backing_field 
    # @option opts [String] :obj_customer_primary_emailk__backing_field 
    # @option opts [Integer] :obj_customer_preferred_ship_day_profile_idk__backing_field 
    # @option opts [Integer] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_idk__backing_field 
    # @option opts [String] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_titlek__backing_field 
    # @option opts [BOOLEAN] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_mondayk__backing_field 
    # @option opts [BOOLEAN] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_tuesdayk__backing_field 
    # @option opts [BOOLEAN] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_wednesdayk__backing_field 
    # @option opts [BOOLEAN] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_thursdayk__backing_field 
    # @option opts [BOOLEAN] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_fridayk__backing_field 
    # @option opts [BOOLEAN] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_saturdayk__backing_field 
    # @option opts [BOOLEAN] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_sundayk__backing_field 
    # @option opts [String] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_notesk__backing_field 
    # @option opts [String] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_created_byk__backing_field 
    # @option opts [DateTime] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_created_onk__backing_field 
    # @option opts [String] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_modified_byk__backing_field 
    # @option opts [DateTime] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_modified_onk__backing_field 
    # @option opts [String] :obj_customer_preferred_ship_day_profile_detailsk__backing_field_messagek__backing_field 
    # @option opts [String] :obj_customer_messagek__backing_field 
    # @return [Array<(InventoryTransactionResult, Integer, Hash)>] InventoryTransactionResult data, response status code and response headers
    def inventory_get_transactions_with_http_info(transaction_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.inventory_get_transactions ...'
      end
      # verify the required parameter 'transaction_id' is set
      if @api_client.config.client_side_validation && transaction_id.nil?
        fail ArgumentError, "Missing the required parameter 'transaction_id' when calling InventoryApi.inventory_get_transactions"
      end
      # resource path
      local_var_path = '/api/Inventory'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'transactionID'] = transaction_id
      query_params[:'inventTranReq.authentication.userKey'] = opts[:'invent_tran_req_authentication_user_key'] if !opts[:'invent_tran_req_authentication_user_key'].nil?
      query_params[:'inventTranReq.authentication.password'] = opts[:'invent_tran_req_authentication_password'] if !opts[:'invent_tran_req_authentication_password'].nil?
      query_params[:'inventTranReq.authentication.customerNo'] = opts[:'invent_tran_req_authentication_customer_no'] if !opts[:'invent_tran_req_authentication_customer_no'].nil?
      query_params[:'inventTranReq.transactionDate'] = opts[:'invent_tran_req_transaction_date'] if !opts[:'invent_tran_req_transaction_date'].nil?
      query_params[:'inventTranReq.transactionStartDateTime'] = opts[:'invent_tran_req_transaction_start_date_time'] if !opts[:'invent_tran_req_transaction_start_date_time'].nil?
      query_params[:'inventTranReq.transactionEndDateTime'] = opts[:'invent_tran_req_transaction_end_date_time'] if !opts[:'invent_tran_req_transaction_end_date_time'].nil?
      query_params[:'inventTranReq.transactionType'] = opts[:'invent_tran_req_transaction_type'] if !opts[:'invent_tran_req_transaction_type'].nil?
      query_params[:'inventTranReq.transactionTypes'] = @api_client.build_collection_param(opts[:'invent_tran_req_transaction_types'], :multi) if !opts[:'invent_tran_req_transaction_types'].nil?
      query_params[:'inventTranReq.warehouse'] = opts[:'invent_tran_req_warehouse'] if !opts[:'invent_tran_req_warehouse'].nil?
      query_params[:'inventTranReq.warehouses'] = @api_client.build_collection_param(opts[:'invent_tran_req_warehouses'], :multi) if !opts[:'invent_tran_req_warehouses'].nil?
      query_params[:'inventTranReq.reference'] = opts[:'invent_tran_req_reference'] if !opts[:'invent_tran_req_reference'].nil?
      query_params[:'inventTranReq.references'] = @api_client.build_collection_param(opts[:'invent_tran_req_references'], :multi) if !opts[:'invent_tran_req_references'].nil?
      query_params[:'inventTranReq.inventoryStatus'] = opts[:'invent_tran_req_inventory_status'] if !opts[:'invent_tran_req_inventory_status'].nil?
      query_params[:'inventTranReq.inventoryStatuses'] = @api_client.build_collection_param(opts[:'invent_tran_req_inventory_statuses'], :multi) if !opts[:'invent_tran_req_inventory_statuses'].nil?
      query_params[:'inventTranReq.itemNumbers'] = @api_client.build_collection_param(opts[:'invent_tran_req_item_numbers'], :multi) if !opts[:'invent_tran_req_item_numbers'].nil?
      query_params[:'inventTranReq.skip'] = opts[:'invent_tran_req_skip'] if !opts[:'invent_tran_req_skip'].nil?
      query_params[:'inventTranReq.top'] = opts[:'invent_tran_req_top'] if !opts[:'invent_tran_req_top'].nil?
      query_params[:'objCustomer.<CustomerAccountNumber>k__BackingField'] = opts[:'obj_customer_customer_account_numberk__backing_field'] if !opts[:'obj_customer_customer_account_numberk__backing_field'].nil?
      query_params[:'objCustomer.<CustomerName>k__BackingField'] = opts[:'obj_customer_customer_namek__backing_field'] if !opts[:'obj_customer_customer_namek__backing_field'].nil?
      query_params[:'objCustomer.<InvoiceAccountNumber>k__BackingField'] = opts[:'obj_customer_invoice_account_numberk__backing_field'] if !opts[:'obj_customer_invoice_account_numberk__backing_field'].nil?
      query_params[:'objCustomer.<VendorAccountNumber>k__BackingField'] = opts[:'obj_customer_vendor_account_numberk__backing_field'] if !opts[:'obj_customer_vendor_account_numberk__backing_field'].nil?
      query_params[:'objCustomer.<PrimaryContactPhone>k__BackingField'] = opts[:'obj_customer_primary_contact_phonek__backing_field'] if !opts[:'obj_customer_primary_contact_phonek__backing_field'].nil?
      query_params[:'objCustomer.<CompanyChain>k__BackingField'] = opts[:'obj_customer_company_chaink__backing_field'] if !opts[:'obj_customer_company_chaink__backing_field'].nil?
      query_params[:'objCustomer.<ProductSharingPolicy>k__BackingField'] = opts[:'obj_customer_product_sharing_policyk__backing_field'] if !opts[:'obj_customer_product_sharing_policyk__backing_field'].nil?
      query_params[:'objCustomer.<IsParent>k__BackingField'] = opts[:'obj_customer_is_parentk__backing_field'] if !opts[:'obj_customer_is_parentk__backing_field'].nil?
      query_params[:'objCustomer.<ShippingSiteCode>k__BackingField'] = opts[:'obj_customer_shipping_site_codek__backing_field'] if !opts[:'obj_customer_shipping_site_codek__backing_field'].nil?
      query_params[:'objCustomer.<ShippingWarehouseCode>k__BackingField'] = opts[:'obj_customer_shipping_warehouse_codek__backing_field'] if !opts[:'obj_customer_shipping_warehouse_codek__backing_field'].nil?
      query_params[:'objCustomer.<LegacyCustomerNo>k__BackingField'] = opts[:'obj_customer_legacy_customer_nok__backing_field'] if !opts[:'obj_customer_legacy_customer_nok__backing_field'].nil?
      query_params[:'objCustomer.<PrimaryEmail>k__BackingField'] = opts[:'obj_customer_primary_emailk__backing_field'] if !opts[:'obj_customer_primary_emailk__backing_field'].nil?
      query_params[:'objCustomer.<PreferredShipDayProfileId>k__BackingField'] = opts[:'obj_customer_preferred_ship_day_profile_idk__backing_field'] if !opts[:'obj_customer_preferred_ship_day_profile_idk__backing_field'].nil?
      query_params[:'objCustomer.<PreferredShipDayProfileDetails>k__BackingField.<Id>k__BackingField'] = opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_idk__backing_field'] if !opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_idk__backing_field'].nil?
      query_params[:'objCustomer.<PreferredShipDayProfileDetails>k__BackingField.<Title>k__BackingField'] = opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_titlek__backing_field'] if !opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_titlek__backing_field'].nil?
      query_params[:'objCustomer.<PreferredShipDayProfileDetails>k__BackingField.<Monday>k__BackingField'] = opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_mondayk__backing_field'] if !opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_mondayk__backing_field'].nil?
      query_params[:'objCustomer.<PreferredShipDayProfileDetails>k__BackingField.<Tuesday>k__BackingField'] = opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_tuesdayk__backing_field'] if !opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_tuesdayk__backing_field'].nil?
      query_params[:'objCustomer.<PreferredShipDayProfileDetails>k__BackingField.<Wednesday>k__BackingField'] = opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_wednesdayk__backing_field'] if !opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_wednesdayk__backing_field'].nil?
      query_params[:'objCustomer.<PreferredShipDayProfileDetails>k__BackingField.<Thursday>k__BackingField'] = opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_thursdayk__backing_field'] if !opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_thursdayk__backing_field'].nil?
      query_params[:'objCustomer.<PreferredShipDayProfileDetails>k__BackingField.<Friday>k__BackingField'] = opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_fridayk__backing_field'] if !opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_fridayk__backing_field'].nil?
      query_params[:'objCustomer.<PreferredShipDayProfileDetails>k__BackingField.<Saturday>k__BackingField'] = opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_saturdayk__backing_field'] if !opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_saturdayk__backing_field'].nil?
      query_params[:'objCustomer.<PreferredShipDayProfileDetails>k__BackingField.<Sunday>k__BackingField'] = opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_sundayk__backing_field'] if !opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_sundayk__backing_field'].nil?
      query_params[:'objCustomer.<PreferredShipDayProfileDetails>k__BackingField.<Notes>k__BackingField'] = opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_notesk__backing_field'] if !opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_notesk__backing_field'].nil?
      query_params[:'objCustomer.<PreferredShipDayProfileDetails>k__BackingField.<CreatedBy>k__BackingField'] = opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_created_byk__backing_field'] if !opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_created_byk__backing_field'].nil?
      query_params[:'objCustomer.<PreferredShipDayProfileDetails>k__BackingField.<CreatedOn>k__BackingField'] = opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_created_onk__backing_field'] if !opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_created_onk__backing_field'].nil?
      query_params[:'objCustomer.<PreferredShipDayProfileDetails>k__BackingField.<ModifiedBy>k__BackingField'] = opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_modified_byk__backing_field'] if !opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_modified_byk__backing_field'].nil?
      query_params[:'objCustomer.<PreferredShipDayProfileDetails>k__BackingField.<ModifiedOn>k__BackingField'] = opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_modified_onk__backing_field'] if !opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_modified_onk__backing_field'].nil?
      query_params[:'objCustomer.<PreferredShipDayProfileDetails>k__BackingField.<Message>k__BackingField'] = opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_messagek__backing_field'] if !opts[:'obj_customer_preferred_ship_day_profile_detailsk__backing_field_messagek__backing_field'].nil?
      query_params[:'objCustomer.<Message>k__BackingField'] = opts[:'obj_customer_messagek__backing_field'] if !opts[:'obj_customer_messagek__backing_field'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'InventoryTransactionResult' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#inventory_get_transactions\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
